{"version":3,"sources":["components/Project/Tech.js","components/Project/Details.js","components/Portfolio/portfolio.js","components/Nav/nav.js","App.js","serviceWorker.js","index.js"],"names":["Tech","props","react_default","a","createElement","className","theme","logo","title","Details","state","height","toggleDetails","_this","closeDetails","openDetails","setState","_this2","this","seeProjectDetails","onClick","AnimateHeight_default","duration","contentClassName","role","tech","map","Project_Tech","key","name","alt","contribution","Component","Portfolio","hoveredProject","toggleThumbs","closeThumbs","openThumbs","smallScreen","hoverThumb","projectName","console","log","renderDescription","focusedProject","project","projects","find","Project_Details","id","summary","type","img","subtitle","data-project","src","href","github","target","live","Nav","menuOpen","aria-label","toggleMenu","javascript","html","css","thumbSmall","thumbBig","App","componentDidMount","responsiveMenu","window","addEventListener","innerWidth","selectProject","nav","portfolio","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9af0e04.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Tech(props) {\r\n    return(\r\n        <i className={props.theme===\"light\" ? props.logo[1] : props.logo[0]} title={props.title}></i>\r\n        // <img src={props.src} alt={props.alt} title={props.title}></img>\r\n    )\r\n}\r\nexport default Tech;","import React, { Component } from \"react\";\r\nimport Tech from \"./Tech\";\r\nimport Header from \"./Header\";\r\nimport Background from \"./Background\";\r\nimport AnimateHeight from \"react-animate-height\";\r\n\r\nclass Details extends Component {\r\n    state = {\r\n        height: \"auto\"\r\n    }\r\n\r\n    toggleDetails = () => {\r\n        this.state.height === \"auto\" ? this.closeDetails() : this.openDetails()\r\n\r\n    };\r\n\r\n\r\n    openDetails = () => {\r\n\r\n        this.setState({ height: \"auto\" });\r\n\r\n    }\r\n\r\n    closeDetails = () => {\r\n\r\n        this.setState({ height: 0 });\r\n\r\n    }\r\n\r\n    render() {\r\n        const projectDetails = \"Project Details\";\r\n        const seeProjectDetails = [\"See \", <button className=\"details-toggler\" onClick={this.toggleDetails}>Project Details</button>]\r\n        return (\r\n\r\n            <div className=\"macro\">\r\n                <div className={\"details-toggler\"}>\r\n                    {this.state.height === \"auto\" ? projectDetails : seeProjectDetails}\r\n                </div>\r\n                <AnimateHeight\r\n                    duration={500}\r\n                    height={this.state.height} // see props documentation bellow\r\n                    contentClassName=\"macro-body\"\r\n                >\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <div>\r\n                                <h3>Role</h3>\r\n                                {this.props.role}\r\n                            </div>\r\n\r\n\r\n                            <div>\r\n                                <h3 className=\"margin-top\">Technologies</h3>\r\n                                <p className=\"tech-tags\">\r\n                                    {this.props.tech.map(tech => {\r\n                                        return <Tech theme={this.props.theme} key={tech.name} logo={tech.logo} alt={tech.name} title={tech.name} />\r\n                                    })}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div>\r\n                                <h3>Contribution</h3>\r\n                                {this.props.contribution}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className={this.state.height === \"auto\" ? \"\" : \"hidden aria-hidden\"} onClick={() => this.closeDetails()}>Close Details</button>\r\n                </AnimateHeight>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Details;","import React, { Component } from \"react\";\r\nimport Thumb from \"../Project/Thumb\";\r\nimport Description from \"../Project/Description\";\r\nimport Details from \"../Project/Details\";\r\nimport AnimateHeight from \"react-animate-height\";\r\n\r\n\r\nclass Portfolio extends Component {\r\n\r\n    state = {\r\n        height: \"auto\",\r\n        hoveredProject: \"\",\r\n    }\r\n\r\n    toggleThumbs = () => {\r\n        this.state.height === \"auto\" ? this.closeThumbs() : this.openThumbs()\r\n\r\n    };\r\n\r\n\r\n    openThumbs = () => {\r\n\r\n        this.setState({ height: \"auto\" });\r\n\r\n    }\r\n\r\n    closeThumbs = () => {\r\n\r\n        this.setState({ height: this.props.smallScreen ? 50 : 50 });\r\n\r\n    }\r\n\r\n    hoverThumb = (projectName) => {\r\n\r\n        console.log(projectName);\r\n        this.setState({ hoveredProject: projectName });\r\n    }\r\n\r\n    renderDescription = () => {\r\n\r\n        if (this.props.focusedProject) {\r\n\r\n            const project = this.props.projects.find(project => project.name === this.props.focusedProject);\r\n            return (\r\n                // <Description id={this.props.focusedProject+\"Macro\"} img={this.props.projects.find(project => project.id === this.props.focusedProject).img} />\r\n                // <Description id={this.props.focusedProject} />\r\n                <Details theme={this.props.theme} project={project} id={project.id} name={project.name} summary={project.summary} tech={project.tech} type={project.type} img={project.img} subtitle={project.subtitle} role={project.role} />\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const height = this.state.height === \"auto\" ? \"auto\" : this.props.smallScreen ? 50 : 80;\r\n        return (\r\n            <section className=\"container\">\r\n                <h1>Portfolio</h1>\r\n\r\n\r\n\r\n\r\n\r\n                {this.props.projects.map(project => {\r\n                    return (\r\n                        <div data-project={project.id} id={project.id + \"Macro\"} className=\"project\">\r\n                            {/* <div className=\"divider\"></div> */}\r\n                            {/* <Background img={props.img}/> */}\r\n\r\n                            <img src={project.img} className=\"half-width\"></img>\r\n\r\n                            <div className=\"center-text project-links\">\r\n                                <button className=\"ylw-btn\"><a href={project.github} target=\"_blank\">View Code</a></button>\r\n                                <button className=\"ylw-btn\"><a href={project.live} target=\"_blank\">Launch Demo</a></button>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"macro-header\">\r\n                                    <h2>{project.name}</h2>\r\n\r\n                                    <span className=\"subtitle\">{project.subtitle}</span>\r\n                                    <p className=\"macro-description\">\r\n                                        {project.summary}\r\n                                    </p>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <br />\r\n\r\n                            <Details key={project.id + \"Macro\"} theme={this.props.theme} project={project} id={project.id} name={project.name} summary={project.summary} tech={project.tech} type={project.type} img={project.img} subtitle={project.subtitle} role={project.role} contribution={project.contribution} />\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolio","import React, { Component } from \"react\";\r\n\r\nconst menu = \"menu clearfix\";\r\nconst menuHide = \"menu clearfix hidden\";\r\nconst menuToggle = \"menu-toggle float-right\"\r\nconst floatRight = \"float-right\";\r\nconst hidden = \"hidden\";\r\nclass Nav extends Component {\r\n    state = {\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <nav id=\"menu\" className={this.props.menuOpen ? menu : menuHide} aria-label=\"Menu\">\r\n                <ul>\r\n\r\n                    <li className=\"float-left\">\r\n                        <button type=\"button\" className=\"menu-btn\"><a href=\"#\">About</a></button>\r\n                        <div className=\"menu-btn-highlight\"></div>\r\n                    </li>\r\n                    <li className=\"float-left\">\r\n                        <button type=\"button\" className=\"menu-btn\">Portfolio</button>\r\n                        <div className=\"menu-btn-highlight\"></div>\r\n                    </li>\r\n                    <li className=\"float-left\">\r\n                        <button type=\"button\" className=\"menu-btn\">Contact</button>\r\n                        <div className=\"menu-btn-highlight\"></div>\r\n                    </li>\r\n\r\n                    <li className=\"float-right\">\r\n                        <button type=\"button\" className=\"menu-btn\"><a href=\"https://www.linkedin.com/in/kira-williams/\" target=\"_blank\">linkedin</a></button>\r\n                        <div className=\"menu-btn-highlight\"></div>\r\n                    </li>\r\n                    <li className=\"float-right\">\r\n                        <button type=\"button\" className=\"menu-btn\"><a href=\"https://github.com/kiriwilliams\" target=\"_blank\"><i className=\"devicon-github-plain\"></i> github</a></button>\r\n                        <div className=\"menu-btn-highlight\"></div>\r\n                    </li>\r\n                    <li  className={this.props.smallScreen ? menuToggle : hidden} onClick={() => this.props.toggleMenu()}>\r\n                        <button type=\"button\" className={this.props.smallScreen ? null : hidden}  >Close Menu</button>\r\n                    </li>\r\n\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Portfolio from \"./components/Portfolio/portfolio\";\r\nimport Nav from \"./components/Nav/nav\";\r\n\r\n\r\nconst firebase = {\r\n  name: \"firebase\",\r\n  logo: \"./img/firebase.png\"\r\n};\r\nconst javascript = {\r\n  name: \"javascript\",\r\n  logo: [\r\n    \"devicon-javascript-plain\",\r\n    \"devicon-javascript-plain colored\"\r\n  ]\r\n};\r\nconst bootstrap = {\r\n  name: \"bootstrap\",\r\n  logo: [\r\n    \"devicon-bootstrap-plain\",\r\n    \"devicon-bootstrap-plain colored\"\r\n  ]\r\n};\r\nconst mongoDB = {\r\n  name: \"mongoDB\",\r\n  logo: [\r\n    \"devicon-mongodb-plain\",\r\n    \"devicon-mongodb-plain colored\"\r\n  ]\r\n};\r\nconst SQL = {\r\n  name: \"MySQL\",\r\n  logo: [\r\n    \"devicon-mysql-plain\",\r\n    \"devicon-mysql-plain colored\"\r\n  ]\r\n};\r\nconst react = {\r\n  name: \"react\",\r\n  logo: [\r\n    \"devicon-react-original\",\r\n    \"devicon-react-original colored\"\r\n  ]\r\n};\r\nconst heroku = {\r\n  name: \"heroku\",\r\n  logo: [\r\n    \"devicon-heroku-plain\",\r\n    \"devicon-heroku-plain colored\"\r\n  ]\r\n};\r\nconst express = {\r\n  name: \"express\",\r\n  logo: [\r\n    \"devicon-express-original\",\r\n    \"devicon-express-original colored\"\r\n  ]\r\n}\r\nconst node = {\r\n  name: \"node\",\r\n  logo: [\r\n    \"devicon-nodejs-plain\",\r\n    \"devicon-nodejs-plain colored\"\r\n  ]\r\n}\r\nconst html = {\r\n  name: \"html\",\r\n  logo: [\r\n    \"devicon-html5-plain-wordmark\",\r\n    \"devicon-html5-plain-wordmark colored\"\r\n  ]\r\n}\r\nconst css = {\r\n  name: \"css\",\r\n  logo: [\r\n    \"devicon-css3-plain-wordmark\",\r\n    \"devicon-css3-plain-wordmark colored\"\r\n  ]\r\n}\r\n\r\nconst projects = [\r\n  // {\r\n  //   id: \"emu\",\r\n  //   name: \"EMU\",\r\n  //   github: \"https://github.com/kiriwilliams/emu-app\",\r\n  //   live: \"https://emu-journal.herokuapp.com/\",\r\n  //   tech: [javascript, mongoDB, react, heroku, html, css],\r\n  //   summary: [<p>EMU (emotion, mood, understanding) is a journaling webapp that allows users to track their mood over time through both color and languge. </p>],\r\n  //   type: \"group\",\r\n  //   role: \"\",\r\n  //   img: \"./img/emu.png\",\r\n  //   thumbSmall: \"./img/thumbs/emu.png\",\r\n  //   thumbBig: \"./img/thumbs/emuTall.png\"\r\n  // },\r\n  {\r\n    id: \"daytripper\",\r\n    name: \"Daytripper\",\r\n    github: \"https://github.com/kiriwilliams/Day-Tripper\",\r\n    live: \"https://kiriwilliams.github.io/Day-Tripper/\",\r\n    tech: [firebase, javascript, html, css],\r\n    summary: [<p>Daytripper was developed to make last minute plans a breeze.<br /> Based on the user's zipcode, Daytripper suggests weather-appropriate activities in the area using information from yelp.</p>, <p><small><strong>Note:</strong> Due to limitations of the free yelp API, queries are rate limited and may be slow.</small></p>],\r\n    type: \"group\",\r\n    role: [<p>Front End Developer / Team Leader</p>,\r\n    ],\r\n    contribution: [<ul>\r\n      <li>Proposed app concept and userflow</li>\r\n      <li>Designed user interface, including buttons that toggle and allow multiple selections at one time, the presentation of search results as cards, and the ability to save results to a “My List” feature</li>\r\n      <li>Utilized the free Yelp API to search for user-specified categories and return relevant information</li>\r\n      <li>Created custom loading-dots animation and message to explain long wait due to rate-limiting</li>\r\n      <li>Managed version control and resolved merge conflicts</li>\r\n    </ul>],\r\n    img: \"./img/daytripper-browser.png\",\r\n    thumbSmall: \"./img/thumbs/daytripper.png\",\r\n    thumbBig: \"./img/thumbs/daytripperTall.png\"\r\n\r\n  },\r\n  // {\r\n  //   id: \"fight\",\r\n  //   name: \"After Skool Fite Club\",\r\n  //   github: \"https://github.com/kiriwilliams/After-Skool-Fite-Club\",\r\n  //   live: \"https://kiriwilliams.github.io/After-Skool-Fite-Club/\",\r\n  //   tech: [bootstrap,javascript, html, css],\r\n  //   summary: [],\r\n  //   type: \"solo\",\r\n  //   role: [],\r\n  //   img: \"./img/asfc.png\",\r\n  //   thumbSmall: \"./img/thumbs/asfc.png\",\r\n  //   thumbBig: \"./img/thumbs/asfcTall.png\"\r\n  // },\r\n  {\r\n    id: \"memory\",\r\n    name: \"Pokemon Memory Game\",\r\n    github: \"https://github.com/kiriwilliams/pokemon-memory-game\",\r\n    live: \"https://kiriwilliams.github.io/pokemon-memory-game/\",\r\n    tech: [react, javascript, html, bootstrap],\r\n    summary: [<p>Players are challenged not to click the same image twice as an icreasing number of pokemon are shuffled across the board.</p>],\r\n    type: \"solo\",\r\n    role: [<p>Sole Developer</p>],\r\n    contribution: [<ul>\r\n      <li>Utilized React to create a game that uses State to track score, level, and whether an image has been clicked or not</li>\r\n      <li>Created custom modal components to display instructions as well as level up messages</li>\r\n\r\n    </ul>],\r\n    img: \"./img/memory-browser.png\",\r\n    thumbSmall: \"./img/thumbs/memorygame.png\",\r\n    thumbBig: \"./img/thumbs/memorygameTall.png\"\r\n  },\r\n  // {\r\n  //   id: \"cooking\",\r\n  //   name: \"Top Chef RPG\",\r\n  //   github: \"https://github.com/kiriwilliams/Top-Chef-RPG\",\r\n  //   live: \"https://top-chef-rpg.herokuapp.com/\",\r\n  //   tech: [SQL,heroku, express, javascript, html, css],\r\n  //   summary: [],\r\n  //   type: \"group\",\r\n  //   role: [],\r\n  //   img: \"./img/topchef.png\",\r\n  //   thumbSmall: \"./img/thumbs/topchef.png\",\r\n  //   thumbBig: \"./img/thumbs/topchefTall.png\"\r\n  // },\r\n  {\r\n    id: \"quiz\",\r\n    name: \"Honey Bee Quiz\",\r\n    github: \"https://github.com/kiriwilliams/Honey-Bee-Quiz\",\r\n    live: \"https://kiriwilliams.github.io/Honey-Bee-Quiz/\",\r\n    tech: [javascript, html, css],\r\n    summary: [],\r\n    type: \"solo\",\r\n    role: [],\r\n    img: \"./img/beequiz.png\",\r\n    thumbSmall: \"./img/thumbs/beequiz.png\",\r\n    thumbBig: \"./img/thumbs/beequizTall.png\"\r\n  },\r\n  // {\r\n  //   id: \"hangman\",\r\n  //   name: \"Word Guess Game\",\r\n  //   subtitle: \"(Who's that Pokemon?)\",\r\n  //   github: \"\",\r\n  //   live: \"\",\r\n  //   tech: [html, css, javascript],\r\n  //   summary: \"\",\r\n  //   type: \"solo\",\r\n  //   role: \"Full Stack\",\r\n  //   img: \"./img/word-guess-game.png\",\r\n  //   thumbSmall: \"./img/thumbs/word-guess-game.png\",\r\n  //   thumbBig: \"./img/thumbs/word-guess-gameTall.png\"\r\n  // },\r\n  // {\r\n  //   id: \"liri\",\r\n  //   name: \"Liri Node Application\",\r\n  //   github: \"https://github.com/kiriwilliams/liri-node-app\",\r\n  //   live: \"\",\r\n  //   tech: [node],\r\n  //   summary: [],\r\n  //   type: \"solo\",\r\n  //   role: [],\r\n  //   img: \"\"\r\n  // },\r\n  // {\r\n  //   id: \"bamazon\",\r\n  //   name: \"Bamazon\",\r\n  //   github: \"https://github.com/kiriwilliams/bamazon\",\r\n  //   live: \"\",\r\n  //   tech: [node],\r\n  //   summary: [],\r\n  //   type: \"solo\",\r\n  //   role: [],\r\n  //   img: \"\"\r\n  // }\r\n]\r\nconst menuButton = \"menu-toggle\";\r\nconst menuButtonHide = \"hidden aria-hidden\";\r\nconst openMenu = \"open menu\";\r\nconst closeMenu = \"close menu\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    smallScreen: false,\r\n    menuOpen: true,\r\n    focusedProject: \"\",\r\n    theme: \"light\"\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.responsiveMenu();\r\n    window.addEventListener('resize', this.responsiveMenu);\r\n\r\n  }\r\n\r\n  responsiveMenu = () => {\r\n    if (window.innerWidth <= 640) {\r\n      this.setState({ smallScreen: true, menuOpen: false });\r\n\r\n    }\r\n    else {\r\n      this.setState({ smallScreen: false, menuOpen: true });\r\n    }\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    this.state.menuOpen ? this.setState({ menuOpen: false }) : this.setState({ menuOpen: true });\r\n  }\r\n\r\n  selectProject = (project) => {\r\n    console.log(project);\r\n    this.setState({ focusedProject: project });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n\r\n\r\n          <h1 id=\"logo\">\r\n            <a href=\"index.html\">Kira Williams</a>\r\n          </h1>\r\n          <span className=\"menu-toggle\">\r\n          <button type=\"button\" id=\"menu-toggle\" className={this.state.smallScreen && !this.state.menuOpen ? menuButton : menuButtonHide} onClick={this.toggleMenu} aria-label=\"Open menu\">\r\n           Open menu\r\n            \r\n          </button>\r\n          </span>\r\n        \r\n        </header>\r\n        <Nav menuOpen={this.state.menuOpen} smallScreen={this.state.smallScreen} toggleMenu={this.toggleMenu} />\r\n\r\n\r\n\r\n\r\n        <main>\r\n          <Portfolio theme={this.state.theme} smallScreen={this.state.smallScreen} projects={projects} selectProject={this.selectProject} focusedProject={this.state.focusedProject} />\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}